name: Sign Release Files

on:
  # Trigger on release publish
  release:
    types: [published]
  # Allow manual triggering
  workflow_dispatch:
    inputs:
      release_tag:
        description: 'Release tag to sign (leave empty for latest)'
        required: false
        type: string

jobs:
  sign-release:
    runs-on: windows-latest
    name: Sign release files with Trusted Signing
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set release tag
        id: set_tag
        run: |
          if ("${{ github.event.inputs.release_tag }}" -eq "") {
            # For automatic trigger, use the release tag that triggered the workflow
            # For manual trigger without tag, use latest
            if ("${{ github.event.release.tag_name }}" -ne "") {
              $tag = "${{ github.event.release.tag_name }}"
            } else {
              $tag = $(gh release list -L 1 --json tagName --jq '.[0].tagName')
            }
          } else {
            $tag = "${{ github.event.inputs.release_tag }}"
          }
          echo "RELEASE_TAG=$tag" >> $env:GITHUB_ENV
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Download release assets
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          mkdir release-files
          gh release download $env:RELEASE_TAG --pattern "*.exe" --pattern "*.dll" --pattern "*.msi" --dir release-files
          echo "Downloaded files for release: $env:RELEASE_TAG"
          ls release-files

      - name: Sign files with Trusted Signing
        uses: azure/trusted-signing-action@v0
        with:
          azure-tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          azure-client-id: ${{ secrets.AZURE_CLIENT_ID }}
          azure-client-secret: ${{ secrets.AZURE_CLIENT_SECRET }}
          endpoint: https://eus.codesigning.azure.net/
          trusted-signing-account-name: your-account-name
          certificate-profile-name: your-profile-name
          files-folder: ${{ github.workspace }}/release-files
          files-folder-filter: exe,dll,msi
          file-digest: SHA256
          timestamp-rfc3161: http://timestamp.acs.microsoft.com
          timestamp-digest: SHA256

      - name: Upload signed files back to release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          Get-ChildItem release-files/*.exe, release-files/*.dll, release-files/*.msi | ForEach-Object {
              Write-Host "Uploading: $($_.Name)"
              gh release upload $env:RELEASE_TAG $_.FullName --clobber
          }
